To create an application that is only an Authorization Server, it is as simple as configuring the authorization and token endpoints as shown in the [Getting Started|guide:gettingStarted] and [Filter Chain Configuration|guide:filterChainConfig] sections and excluding the @oauth2ProviderFilter@.

So instead of the following filter chain:

{code}
   grails.plugin.springsecurity.filterChain.chainMap = [
            '/oauth/token': 'JOINED_FILTERS,-oauth2ProviderFilter,-securityContextPersistenceFilter,-logoutFilter,-rememberMeAuthenticationFilter,-exceptionTranslationFilter',
            '/securedOAuth2Resources/**': 'JOINED_FILTERS,-securityContextPersistenceFilter,-logoutFilter,-rememberMeAuthenticationFilter,-basicAuthenticationFilter,-exceptionTranslationFilter',
            '/**': 'JOINED_FILTERS,-statelessSecurityContextPersistenceFilter,-oauth2ProviderFilter,-clientCredentialsTokenEndpointFilter,-basicAuthenticationFilter,-oauth2ExceptionTranslationFilter'
   ]
{code}

You would have something like this:

{code}
   grails.plugin.springsecurity.filterChain.chainMap = [
            '/oauth/token': 'JOINED_FILTERS,-oauth2ProviderFilter,-securityContextPersistenceFilter,-logoutFilter,-rememberMeAuthenticationFilter,-exceptionTranslationFilter',
            '/**': 'JOINED_FILTERS,-statelessSecurityContextPersistenceFilter,-oauth2ProviderFilter,-clientCredentialsTokenEndpointFilter,-basicAuthenticationFilter,-oauth2ExceptionTranslationFilter'
   ]
{code}

Where @/\*\*@ is any Authorization Server specific functionality.
